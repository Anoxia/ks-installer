on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
name: Build Release

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: ks-installer
  IMAGE_REPO: kubesphere

jobs:
  CreateRelease:
    runs-on: ubuntu-latest
    if: github.repository == 'kubesphere/ks-installer'
    steps:
      - uses: actions/checkout@v2

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset (1)
        id: upload-release-asset-1
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./deploy/cluster-configuration.yaml
          asset_name: cluster-configuration.yaml
          asset_content_type: application/yaml

      - name: Upload Release Asset (2)
        id: upload-release-asset-2
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./deploy/kubesphere-installer.yaml
          asset_name: kubesphere-installer.yaml
          asset_content_type: application/yaml

      - name: Build Release Images List
        run: >
          docker run --rm
          -v "$PWD":/usr/src/myapp -w /usr/src/myapp kubespheredev/release-tools:v0.0.1
          ansible-playbook release.yml --skip-tags=sync_images

      - name: Upload Release Asset (3)
        id: upload-release-asset-3
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./images-list.txt
          asset_name: images-list.txt
          asset_content_type: application/txt

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Log into registry
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build and push Docker images
        uses: docker/build-push-action@v4
        with:
          file: Dockerfile.complete
          tags: kubesphere/ks-installer:${{ github.ref_name }}
          push: true
          platforms: linux/amd64,linux/arm64
          provenance: false
          sbom: false

  SyncReleaseImages:
    needs:
      - CreateRelease
    runs-on: ubuntu-latest
    if: github.repository == 'kubesphere/ks-installer'
    steps:
      - uses: actions/checkout@v2

      - name: Sync published images to mirror registry
        run: >
          docker run --rm
          -v "$PWD":/usr/src/myapp -w /usr/src/myapp kubespheredev/release-tools:v0.0.1 sh -c
          "skopeo login -u ${{ secrets.DOCKER_USERNAME }} -p \"${{ secrets.DOCKER_PASSWORD }}\" docker.io &&
          skopeo login -u ${{ secrets.REGISTRY_ALIYUN_USERNAME }} -p \"${{ secrets.REGISTRY_ALIYUN_PASSWORD }}\" registry.cn-beijing.aliyuncs.com &&
          ansible-playbook release.yml --skip-tags=images_list"